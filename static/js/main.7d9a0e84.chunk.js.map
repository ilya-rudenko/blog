{"version":3,"sources":["redux/types.js","redux/reducers/postsReducer.js","redux/reducers/authorsReducer.js","redux/reducers/titlesReducer.js","redux/reducers/index.js","redux/store.js","components/Header/Header.jsx","components/PostItem/PostItem.jsx","pages/Home/Home.jsx","components/Button/Button.jsx","pages/PostPage/PostPage.jsx","redux/actions/titlesActions.js","redux/actions/postsActions.js","pages/AddPost/AddPost.jsx","redux/actions/authorsActions.js","App.js","index.js"],"names":["ADD_POST","DELETE_POST","ADD_AUTHOR","ADD_TITLE","DELETE_TITLE","initialState","postsReducer","state","action","type","payload","filter","post","id","authorsReducer","titlesReducer","title","rootReducer","combineReducers","posts","authors","titles","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Header","addPost","className","to","Create","style","fontSize","PostItem","date","authorName","dayjs","format","Home","useSelector","length","map","Button","onClick","text","PostPage","postId","match","params","history","useHistory","dispatch","useDispatch","dangerouslySetInnerHTML","__html","body","confirm","push","AddPost","useState","EditorState","createEmpty","editorState","setEditorState","setAuthorName","setTitle","value","onChange","e","target","list","index","onEditorStateChange","newEditorState","wrapperClassName","editorClassName","formattedTitle","trim","formattedAuthorName","includes","alert","uuid","draftToHtml","convertToRaw","getCurrentContent","Date","now","addTitle","addAuthor","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d9a0e84.chunk.js","sourcesContent":["// post\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\n// authors\r\nexport const ADD_AUTHOR = \"ADD_AUTHOR\";\r\n\r\n// Titles\r\nexport const ADD_TITLE = \"ADD_TITLE\";\r\nexport const DELETE_TITLE = \"DELETE_TITLE\";\r\n","import { ADD_POST, DELETE_POST } from \"../types\";\r\n\r\nconst initialState = [];\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return [action.payload, ...state];\r\n    case DELETE_POST:\r\n      return state.filter((post) => post.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n","import { ADD_AUTHOR } from \"../types\";\r\n\r\nconst initialState = [];\r\n\r\nconst authorsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_AUTHOR:\r\n      return [action.payload, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authorsReducer;\r\n","import { ADD_TITLE, DELETE_TITLE } from \"../types\";\r\n\r\nconst initialState = [];\r\n\r\nconst titlesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TITLE:\r\n      return [action.payload, ...state];\r\n    case DELETE_TITLE:\r\n      return state.filter((title) => title !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default titlesReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport postsReducer from \"./postsReducer\";\r\nimport authorsReducer from \"./authorsReducer\";\r\nimport titlesReducer from \"./titlesReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  authors: authorsReducer,\r\n  titles: titlesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Home as HomeIcon, Create as CreateIcon } from \"@material-ui/icons\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nconst Header = ({ title, addPost }) => {\r\n  return (\r\n    <div className=\"header__wrapper\">\r\n      <h1 className=\"header__text\">{title}</h1>\r\n      <div className=\"header__icon-wrapper\">\r\n        {addPost ? (\r\n          <Link to=\"/add-post\">\r\n            <CreateIcon className=\"header__icon\" style={{ fontSize: 40 }} />\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/\">\r\n            <HomeIcon className=\"header__icon\" style={{ fontSize: 40 }} />\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./PostItem.scss\";\r\n\r\nconst PostItem = ({ id, title, date, authorName }) => {\r\n  return (\r\n    <Link to={`/post/${id}`} className=\"post-item__link\">\r\n      <div className=\"post-item__wrapper\">\r\n        <h2 className=\"post-item__title\">{title}</h2>\r\n        <div className=\"post-item__info\">\r\n          <span className=\"post-item__author\">Автор: {authorName}</span>\r\n          <span className=\"post-item__date\">\r\n            {dayjs(date).format(\"HH:mm, MMMM YYYY\")}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPostItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.number.isRequired,\r\n  authorName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostItem;\r\n","import React, { Fragment } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport PostItem from \"../../components/PostItem/PostItem\";\r\n\r\nimport \"./Home.scss\";\r\n\r\n//redux\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Home = () => {\r\n  const posts = useSelector((state) => state.posts);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header title=\"Главная\" addPost />\r\n      <div className=\"content-wrapper\">\r\n        {posts.length === 0 ? (\r\n          <div className=\"placeholder\">Здесь пока нет записей...</div>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <PostItem\r\n              title={post.title}\r\n              id={post.id}\r\n              authorName={post.authorName}\r\n              date={post.date}\r\n              key={post.id}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ onClick, text, type, style, to }) => {\r\n  return to ? (\r\n    <Link to={to}>\r\n      <button\r\n        onClick={onClick}\r\n        className={`button button__${type}`}\r\n        style={style}\r\n      >\r\n        {text}\r\n      </button>\r\n    </Link>\r\n  ) : (\r\n    <button\r\n      onClick={onClick}\r\n      className={`button button__${type}`}\r\n      style={style}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string,\r\n  style: PropTypes.object,\r\n  type: PropTypes.oneOf([\"blue\", \"red\"]),\r\n  to: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport Button from \"../../components/Button/Button\";\r\nimport Header from \"../../components/Header/Header\";\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deletePost } from \"../../redux/actions/postsActions\";\r\nimport { deleteTitle } from \"../../redux/actions/titlesActions\";\r\n\r\n//SCSS\r\nimport \"./PostPage.scss\";\r\n\r\nconst PostPage = ({ match }) => {\r\n  const postId = match.params.postId;\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const post = useSelector((state) => {\r\n    return state.posts.filter((post) => post.id === postId);\r\n  })[0];\r\n\r\n  let createContentMarkup = () => {\r\n    return { __html: post ? post.body : \"\" };\r\n  };\r\n\r\n  const onDeletePost = () => {\r\n    if (window.confirm(\"Вы уверены что хотите удалить запись?\")) {\r\n      dispatch(deletePost(postId));\r\n      dispatch(deleteTitle(post.title));\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return post ? (\r\n    <Fragment>\r\n      <Header title={post.title} />\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"post__author\">{post.authorName}</div>\r\n\r\n        <div className=\"post__data\">\r\n          {dayjs(post.date).format(\"HH:mm, D MMMM YYYY\")}\r\n        </div>\r\n        <hr className=\"post__separator\" />\r\n        <div\r\n          className=\"post__body\"\r\n          dangerouslySetInnerHTML={createContentMarkup()}\r\n        />\r\n        <hr className=\"post__separator\" />\r\n        <Button text=\"Удалить запись\" type=\"red\" onClick={onDeletePost} />\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <Header title=\"Такой записи нет\" />\r\n      <div className=\"content-wrapper\">\r\n        <Button text=\"Вернуться на главную страницу\" type=\"blue\" to=\"/\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPostPage.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostPage;\r\n","import { ADD_TITLE, DELETE_TITLE } from \"../types\";\r\n\r\nexport const addTitle = (title) => {\r\n  return {\r\n    type: ADD_TITLE,\r\n    payload: title,\r\n  };\r\n};\r\n\r\nexport const deleteTitle = (title) => {\r\n  return {\r\n    type: DELETE_TITLE,\r\n    payload: title,\r\n  };\r\n};\r\n","import { ADD_POST, DELETE_POST } from \"../types\";\r\n\r\nexport const addPost = ({ id, title, authorName, date, body }) => {\r\n  return {\r\n    type: ADD_POST,\r\n    payload: {\r\n      id,\r\n      title,\r\n      authorName,\r\n      date,\r\n      body,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deletePost = (id) => ({\r\n  type: DELETE_POST,\r\n  payload: id,\r\n});\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Editor } from \"@nick4fake/react-draft-wysiwyg\";\r\nimport \"@nick4fake/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport uuid from \"react-uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// scss\r\nimport \"./AddPost.scss\";\r\n\r\n// components\r\nimport Button from \"../../components/Button/Button\";\r\nimport Header from \"../../components/Header/Header\";\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../../redux/actions/postsActions\";\r\nimport { addAuthor } from \"../../redux/actions/authorsActions\";\r\nimport { addTitle } from \"../../redux/actions/titlesActions\";\r\n\r\nconst AddPost = () => {\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n  const [authorName, setAuthorName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const authors = useSelector((state) => state.authors);\r\n  const titles = useSelector((state) => state.titles);\r\n\r\n  const onEditorStateChange = (newEditorState) => {\r\n    setEditorState(newEditorState);\r\n  };\r\n  const onAuthorNameChange = (e) => {\r\n    setAuthorName(e.target.value);\r\n  };\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const formattedTitle = title.trim();\r\n    const formattedAuthorName = authorName.trim();\r\n\r\n    if (formattedAuthorName === \"\") {\r\n      alert(\"Имя автора не должно быть пустым\");\r\n      return;\r\n    }\r\n    if (formattedTitle === \"\") {\r\n      alert(\"Заголовок не должен быть пустым\");\r\n      return;\r\n    }\r\n    if (titles.includes(formattedTitle)) {\r\n      alert(\"Заголовок должен быть уникальным\");\r\n      return;\r\n    }\r\n\r\n    // console.log({ formattedTitle, formattedAuthorName });\r\n\r\n    dispatch(\r\n      addPost({\r\n        id: uuid(),\r\n        body: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n        title,\r\n        authorName: formattedAuthorName,\r\n        date: Date.now(),\r\n      })\r\n    );\r\n\r\n    dispatch(addTitle(formattedTitle));\r\n\r\n    if (!authors.includes(formattedAuthorName)) {\r\n      dispatch(addAuthor(formattedAuthorName));\r\n    }\r\n\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header title=\"Добавить запись\" />\r\n      <div className=\"content-wrapper\">\r\n        <form>\r\n          <div className=\"form-text\">Автор:</div>\r\n          <input\r\n            value={authorName}\r\n            onChange={onAuthorNameChange}\r\n            list=\"authorsList\"\r\n          />\r\n          <datalist id=\"authorsList\">\r\n            {authors.map((authorName, index) => (\r\n              <option value={authorName} key={index} />\r\n            ))}\r\n          </datalist>\r\n        </form>\r\n\r\n        <form>\r\n          <div className=\"form-text\">Заголовок:</div>\r\n          <input value={title} onChange={onTitleChange} />\r\n        </form>\r\n\r\n        <Editor\r\n          editorState={editorState}\r\n          onEditorStateChange={onEditorStateChange}\r\n          wrapperClassName=\"editor__wrapper\"\r\n          editorClassName=\"editor__text-area\"\r\n        />\r\n        <Button text=\"Добавить запись\" type=\"blue\" onClick={onSubmit} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","import { ADD_AUTHOR } from \"../types\";\r\n\r\nexport const addAuthor = (authorName) => {\r\n  return {\r\n    type: ADD_AUTHOR,\r\n    payload: authorName,\r\n  };\r\n};\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./App.scss\";\n\nimport Home from \"./pages/Home/Home\";\nimport PostPage from \"./pages/PostPage/PostPage\";\nimport AddPost from \"./pages/AddPost/AddPost\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <HashRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/add-post\" component={AddPost} />\n            <Route exact path=\"/post/:postId\" component={PostPage} />\n          </HashRouter>\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}