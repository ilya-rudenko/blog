{"version":3,"sources":["redux/types.js","redux/reducers/postsReducer.js","redux/reducers/authorsReducer.js","redux/reducers/index.js","redux/store.js","components/Button.jsx","components/Header.jsx","components/PostItem.jsx","pages/Home.jsx","pages/PostPage.jsx","redux/actions/postsActions.js","pages/AddPost.jsx","redux/actions/authorsActions.js","App.js","index.js"],"names":["ADD_POST","DELETE_POST","ADD_AUTHOR","initialState","postsReducer","state","action","type","payload","filter","post","id","authorsReducer","rootReducer","combineReducers","posts","authors","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Button","onClick","text","style","to","className","Header","title","PostItem","date","authorName","dayjs","format","Home","useSelector","map","PostPage","postId","match","params","history","useHistory","dispatch","useDispatch","dangerouslySetInnerHTML","__html","body","marginLeft","confirm","push","AddPost","useState","EditorState","createEmpty","editorState","setEditorState","setAuthorName","setTitle","value","onChange","e","target","list","index","onEditorStateChange","newEditorState","wrapperClassName","editorClassName","trim","addPost","uuid","draftToHtml","convertToRaw","getCurrentContent","Date","now","includes","addAuthor","alert","console","log","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abfa84d1.chunk.js","sourcesContent":["// post\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\n// authors\r\nexport const ADD_AUTHOR = \"ADD_AUTHOR\";\r\n\r\n// Titles\r\nexport const ADD_TITLE = \"ADD_TITLE\";\r\nexport const DELETE_TITLE = \"DELETE_TITLE\";\r\n","import { ADD_POST, DELETE_POST } from \"../types\";\r\n\r\nconst initialState = [];\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return [action.payload, ...state];\r\n    case DELETE_POST:\r\n      return state.filter((post) => post.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n","import { ADD_AUTHOR } from \"../types\";\r\n\r\nconst initialState = [];\r\n\r\nconst authorsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_AUTHOR:\r\n      return [action.payload, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authorsReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport postsReducer from \"./postsReducer\";\r\nimport authorsReducer from \"./authorsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  authors: authorsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Button = ({ onClick, text, type, style, to }) => {\r\n  return to ? (\r\n    <Link to={to}>\r\n      <button\r\n        onClick={onClick}\r\n        className={`button button__${type}`}\r\n        style={style}\r\n      >\r\n        {text}\r\n      </button>\r\n    </Link>\r\n  ) : (\r\n    <button\r\n      onClick={onClick}\r\n      className={`button button__${type}`}\r\n      style={style}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string,\r\n  style: PropTypes.object,\r\n  type: PropTypes.oneOf([\"blue\", \"red\"]),\r\n  to: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <div className=\"header__wrapper\">\r\n      <h1 className=\"header__text\">{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PostItem = ({ id, title, date, authorName }) => {\r\n  return (\r\n    <Link to={`/post/${id}`} className=\"post-item__link\">\r\n      <div className=\"post-item__wrapper\">\r\n        <h2 className=\"post-item__title\">{title}</h2>\r\n        <div className=\"post-item__info\">\r\n          <span className=\"post-item__author\">Автор: {authorName}</span>\r\n          <span className=\"post-item__date\">\r\n            {dayjs(date).format(\"HH:mm, MMMM YYYY\")}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPostItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.number.isRequired,\r\n  authorName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PostItem;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport Header from \"../components/Header\";\r\nimport PostItem from \"../components/PostItem\";\r\n\r\n//redux\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Home = () => {\r\n  const posts = useSelector((state) => state.posts);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header title=\"Главная\" />\r\n      <div className=\"content-wrapper\">\r\n        {posts.map((post) => (\r\n          <PostItem\r\n            title={post.title}\r\n            id={post.id}\r\n            authorName={post.authorName}\r\n            date={post.date}\r\n            key={post.id}\r\n          />\r\n        ))}\r\n        <Button text=\"Добавить запись\" type=\"blue\" to=\"/add-post\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport Header from \"../components/Header\";\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deletePost } from \"../redux/actions/postsActions\";\r\n\r\nconst PostPage = ({ match }) => {\r\n  const postId = match.params.postId;\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const post = useSelector((state) => {\r\n    return state.posts.filter((post) => post.id === postId);\r\n  })[0];\r\n\r\n  let createContentMarkup = () => {\r\n    return { __html: post ? post.body : \"\" };\r\n  };\r\n\r\n  const onDeletePost = () => {\r\n    if (window.confirm(\"Вы уверены что хотите удалить пост?\")) {\r\n      dispatch(deletePost(postId));\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return post ? (\r\n    <Fragment>\r\n      <Header title={post.title} />\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"post__author\">{post.authorName}</div>\r\n\r\n        <div className=\"post__data\">\r\n          {dayjs(post.date).format(\"HH:mm, MMMM YYYY\")}\r\n        </div>\r\n        <hr className=\"post__separator\" />\r\n        <div\r\n          className=\"post__body\"\r\n          dangerouslySetInnerHTML={createContentMarkup()}\r\n        />\r\n        <hr className=\"post__separator\" />\r\n        <Button text=\"Вернуться на главную\" type=\"blue\" to=\"/\" />\r\n        <Button\r\n          text=\"Удалить запись\"\r\n          type=\"red\"\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={onDeletePost}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <Fragment>\r\n      <Header title=\"Такого поста нет\" />\r\n      <div className=\"content-wrapper\">\r\n        <Button text=\"Вернуться на главную страницу\" type=\"blue\" to=\"/\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPostPage.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostPage;\r\n","import { ADD_POST, DELETE_POST } from \"../types\";\r\n\r\nexport const addPost = ({ id, title, authorName, date, body }) => {\r\n  return {\r\n    type: ADD_POST,\r\n    payload: {\r\n      id,\r\n      title,\r\n      authorName,\r\n      date,\r\n      body,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deletePost = (id) => ({\r\n  type: DELETE_POST,\r\n  payload: id,\r\n});\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { convertToRaw, EditorState } from \"draft-js\";\r\nimport uuid from \"react-uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// components\r\nimport Button from \"../components/Button\";\r\nimport Header from \"../components/Header\";\r\n// redux\r\nimport { addPost } from \"../redux/actions/postsActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addAuthor } from \"../redux/actions/authorsActions\";\r\n\r\nconst AddPost = () => {\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n  const [authorName, setAuthorName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const authors = useSelector((state) => state.authors);\r\n\r\n  const onEditorStateChange = (newEditorState) => {\r\n    setEditorState(newEditorState);\r\n  };\r\n  const onAuthorNameChange = (e) => {\r\n    setAuthorName(e.target.value);\r\n  };\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setAuthorName(authorName.trim());\r\n    setTitle(title.trim());\r\n\r\n    if (authorName === \"\") {\r\n      alert(\"Имя автора не должно быть пустым\");\r\n      return;\r\n    }\r\n    if (title === \"\") {\r\n      alert(\"Заголовок не должен быть пустым\");\r\n      return;\r\n    }\r\n\r\n    dispatch(\r\n      addPost({\r\n        id: uuid(),\r\n        body: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n        title,\r\n        authorName: authorName.trim(),\r\n        date: Date.now(),\r\n      })\r\n    );\r\n\r\n    if (!authors.includes(authorName)) {\r\n      dispatch(addAuthor(authorName));\r\n    }\r\n\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header title=\"Добавить запись\" />\r\n      <div className=\"content-wrapper\">\r\n        <form>\r\n          Автор:{\" \"}\r\n          <input\r\n            className=\"form-control\"\r\n            value={authorName}\r\n            onChange={onAuthorNameChange}\r\n            list=\"authorsList\"\r\n          />\r\n          <datalist id=\"authorsList\">\r\n            {authors.map((authorName, index) => (\r\n              <option value={authorName} key={index} />\r\n            ))}\r\n          </datalist>\r\n        </form>\r\n\r\n        <form>\r\n          Заголовок:{\" \"}\r\n          <input\r\n            className=\"form-control\"\r\n            value={title}\r\n            onChange={onTitleChange}\r\n          />\r\n        </form>\r\n\r\n        <Editor\r\n          editorState={editorState}\r\n          onEditorStateChange={onEditorStateChange}\r\n          wrapperClassName=\"editor__wrapper\"\r\n          editorClassName=\"editor__text-area\"\r\n        />\r\n        <Button text=\"Добавить запись\" type=\"blue\" onClick={onSubmit} />\r\n        <Button\r\n          text=\"Отмена\"\r\n          type=\"red\"\r\n          onClick={() => {\r\n            setEditorState(EditorState.createEmpty());\r\n            console.log(\"Redirected\");\r\n          }}\r\n          to=\"/\"\r\n          style={{ marginLeft: \"10px\" }}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","import { ADD_AUTHOR } from \"../types\";\r\n\r\nexport const addAuthor = (authorName) => {\r\n  return {\r\n    type: ADD_AUTHOR,\r\n    payload: authorName,\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./App.scss\";\n\nimport Home from \"./pages/Home\";\nimport PostPage from \"./pages/PostPage\";\nimport AddPost from \"./pages/AddPost\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <BrowserRouter>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/add-post\" component={AddPost} />\n            <Route exact path=\"/post/:postId\" component={PostPage} />\n          </BrowserRouter>\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}